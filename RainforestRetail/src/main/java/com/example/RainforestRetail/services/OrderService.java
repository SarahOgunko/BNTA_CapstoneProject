package com.example.RainforestRetail.services;import com.example.RainforestRetail.models.Order;import com.example.RainforestRetail.models.Product;import com.example.RainforestRetail.models.ProductOrderDTO;import com.example.RainforestRetail.models.User;import com.example.RainforestRetail.repositories.OrderRepository;import com.example.RainforestRetail.repositories.ProductOrderRepository;import com.example.RainforestRetail.repositories.ProductRepository;import com.example.RainforestRetail.repositories.UserRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.time.LocalDateTime;@Servicepublic class OrderService {    @Autowired    UserRepository userRepository;    @Autowired    OrderRepository orderRepository;    @Autowired    ProductOrderRepository productOrderRepository;    @Autowired    ProductRepository productRepository;//    currently to process order it is mandatory to log in - as an extension consider possibility//    of guest checkout//    public Order processOrder(ProductOrderDTO productOrderDTO, long userId){//        User user = userRepository.findById(userId).get();//        Product product = productRepository.findById(productOrderDTO.getProductId()).get();//        if (product.getStock() < productOrderDTO.getQuantity()){ // check stock//            return null;//        }////        Order newOrder = Order(user, LocalDateTime.now())////    }//    method that takes in user, localDateTime,//    method to add order to a user//    get user by id//    check user exists in database//     if user exists create order    public Order createOrder(long id ){        Order order = orderRepository.findById(id)    }}